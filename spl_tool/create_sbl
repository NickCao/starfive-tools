#!/usr/bin/env python3
# ref https://github.com/starfive-tech/Tools/issues/1
import zlib
import struct
import argparse

parser = argparse.ArgumentParser(prog="create_sbl")
parser.add_argument("input")
parser.add_argument("output")
args = parser.parse_args()

with open(args.input, mode="rb") as file:
    data = file.read()
    size = len(data)
    checksum = zlib.crc32(data)
    common = struct.pack(
        "<2s2xI24x",
        b"\x40\x02",
        0x200000,  # SBL_BAK_OFFSET
    )
    padding = struct.pack("<608x")
    header = struct.pack(
        f"<4xII2s2xI364x",
        0x01010101,  # SBL_VER
        size,
        b"\x00\x04",
        checksum,
    )

with open(args.output, "xb") as file:
    file.write(common)
    file.write(padding)
    file.write(header)
    file.write(data)
